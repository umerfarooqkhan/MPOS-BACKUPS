
    /*!
    * Copyright (c) Microsoft Corporation.
    * All rights reserved. See LICENSE in the project root for license information.
    * THIS FILE IS AN AUTOGENERATED TYPESCRIPT PROXY EXTENSION.
    * TO USE THIS FILE, IT MUST BE ADDED TO A D365COMMERCE APPLICATION
    */
    import {
        AsyncResult,
        callActionOrExecute,
        DataServiceQuery,
        IContext,
        IDataServiceRequest,
        IQueryResultSettings,
        // @ts-ignore -- Unused import
        NullResult
    } from '@msdyn365-commerce/retail-proxy';
    // @ts-ignore -- Unused import
    import * as EntityClasses from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceModels.g';
    // @ts-ignore -- Unused import
    import * as Entities from '@msdyn365-commerce/retail-proxy/dist/Entities/CommerceTypes.g';
    import * as DataServiceEntities from './DataServiceEntities.g';

    

        // @ts-ignore
        function cFZCustomerQuery(unusualEntityId?: number): DataServiceQuery {
        const key = (unusualEntityId) ? { UnusualEntityId: unusualEntityId } :null;
        return new DataServiceQuery("CFZCustomer", "CFZCustomer", DataServiceEntities.CFZCustomerExtensionClass, key);
        }

        
    export function createGetVisitsActionInput(accountID: string): IDataServiceRequest {
    const query = cFZCustomerQuery();
    return query.createDataServiceRequestForOperation('GetVisitsAction', true, '', 'false', {bypassCache: 'none', returnEntity: ''}, {AccountID: accountID });
    }

    
    export function getVisitsActionAsync(context: IContext, accountID: string): AsyncResult<string> {
    const request = createGetVisitsActionInput(accountID);
    return callActionOrExecute<string>(request, context.callerContext);
    }
  