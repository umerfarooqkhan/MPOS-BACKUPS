// <auto-generated />
namespace Confiz.Commerce.RetailProxy.Extension
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.IO;
    using System.Threading.Tasks;
    using Microsoft.Dynamics.Commerce.RetailProxy;

    
    /// <summary>
    /// Interface for Store Operations Manager.
    /// </summary>
    [GeneratedCodeAttribute("Confiz.Commerce.RetailProxy.Extension", "1.0")]
    public interface IStoreOperationsManager : IEntityManager
    {
        
        /// <summary>
        /// BlockUnBlockServiceRequest method.
        /// </summary>
        /// <param name="memberId">The memberId.</param>
        /// <param name="requestType">The requestType.</param>
        /// <param name="pointsValueToBlock">The pointsValueToBlock.</param>
        /// <param name="transactionId">The transactionId.</param>
        /// <param name="staffId">The staffId.</param>
        /// <returns>int object.</returns>
        Task<int> BlockUnBlockServiceRequest(int memberId, string requestType, string pointsValueToBlock, string transactionId, string staffId);
    
        /// <summary>
        /// GKSyncOfflineTransactionRequest method.
        /// </summary>
        /// <param name="transactionId">The transactionId.</param>
        /// <returns>string object.</returns>
        Task<string> GKSyncOfflineTransactionRequest(string transactionId);
    
        /// <summary>
        /// SearchProductsByTextAsync method.
        /// </summary>
        /// <param name="searchText">The searchText.</param>
        /// <param name="channelId">The channelId.</param>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of ProductSearchResult.</returns>
        Task<PagedResult<ProductSearchResult>> SearchProductsByTextAsync(string searchText, long channelId, QueryResultSettings queryResultSettings = null);
    
    }
    
    /// <summary>
    /// Interface for CFZCustomer Manager.
    /// </summary>
    [GeneratedCodeAttribute("Confiz.Commerce.RetailProxy.Extension", "1.0")]
    public interface ICFZCustomerManager : IEntityManager
    {
        
        /// <summary>
        /// InsertClearTaxLogAction method.
        /// </summary>
        /// <param name="receiptId">The receiptId.</param>
        /// <param name="qR">The qR.</param>
        /// <param name="pIH">The pIH.</param>
        /// <param name="uUID">The uUID.</param>
        /// <param name="request">The request.</param>
        /// <param name="response">The response.</param>
        /// <param name="transactionDate">The transactionDate.</param>
        /// <param name="isOffline">The isOffline.</param>
        /// <param name="isError">The isError.</param>
        /// <param name="errors">The errors.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> InsertClearTaxLogAction(string receiptId, string qR, string pIH, string uUID, string request, string response, string transactionDate, int isOffline, bool isError, string errors, string requestType);
    
        /// <summary>
        /// GetTenderTypeValueAction method.
        /// </summary>
        /// <param name="saleOrder">The saleOrder.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetTenderTypeValueAction(SalesOrder saleOrder, string requestType);
    
        /// <summary>
        /// GetIfOrderExistsAction method.
        /// </summary>
        /// <param name="receiptId">The receiptId.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetIfOrderExistsAction(string receiptId, string requestType);
    
        /// <summary>
        /// GetCredentialsAction method.
        /// </summary>
        /// <param name="salesOrder">The salesOrder.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetCredentialsAction(SalesOrder salesOrder, string requestType);
    
        /// <summary>
        /// GetCouponDiscountAction method.
        /// </summary>
        /// <param name="parmStatus">The parmStatus.</param>
        /// <param name="parmNetAmount">The parmNetAmount.</param>
        /// <param name="parmQty">The parmQty.</param>
        /// <param name="parmTransactionId">The parmTransactionId.</param>
        /// <param name="parmReceiptId">The parmReceiptId.</param>
        /// <param name="parmLine">The parmLine.</param>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of Receipt.</returns>
        Task<PagedResult<Receipt>> GetCouponDiscountAction(string parmStatus, decimal parmNetAmount, decimal parmQty, string parmTransactionId, string parmReceiptId, CartLine parmLine, QueryResultSettings queryResultSettings = null);
    
        /// <summary>
        /// GetCouponValidationAction method.
        /// </summary>
        /// <param name="parmStatus">The parmStatus.</param>
        /// <param name="parmNetAmount">The parmNetAmount.</param>
        /// <param name="parmQty">The parmQty.</param>
        /// <param name="parmTransactionId">The parmTransactionId.</param>
        /// <param name="parmReceiptId">The parmReceiptId.</param>
        /// <param name="parmLine">The parmLine.</param>
        /// <returns>string object.</returns>
        Task<string> GetCouponValidationAction(string parmStatus, decimal parmNetAmount, decimal parmQty, string parmTransactionId, string parmReceiptId, CartLine parmLine);
    
        /// <summary>
        /// GetCouponsAction method.
        /// </summary>
        /// <param name="products">The products.</param>
        /// <param name="transactionId">The transactionId.</param>
        /// <param name="returnTransactionId">The returnTransactionId.</param>
        /// <param name="receiptId">The receiptId.</param>
        /// <param name="storeId">The storeId.</param>
        /// <param name="terminalId">The terminalId.</param>
        /// <param name="transactionDate">The transactionDate.</param>
        /// <param name="couponCode">The couponCode.</param>
        /// <param name="customerId">The customerId.</param>
        /// <param name="requestType">The requestType.</param>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of Receipt.</returns>
        Task<PagedResult<Receipt>> GetCouponsAction(string products, string transactionId, string returnTransactionId, string receiptId, string storeId, string terminalId, string transactionDate, string couponCode, string customerId, string requestType, QueryResultSettings queryResultSettings = null);
    
        /// <summary>
        /// GetCouponsValidationRedemptionDataAction method.
        /// </summary>
        /// <param name="products">The products.</param>
        /// <param name="transactionId">The transactionId.</param>
        /// <param name="returnTransactionId">The returnTransactionId.</param>
        /// <param name="receiptId">The receiptId.</param>
        /// <param name="storeId">The storeId.</param>
        /// <param name="terminalId">The terminalId.</param>
        /// <param name="transactionDate">The transactionDate.</param>
        /// <param name="couponCode">The couponCode.</param>
        /// <param name="customerId">The customerId.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetCouponsValidationRedemptionDataAction(string products, string transactionId, string returnTransactionId, string receiptId, string storeId, string terminalId, string transactionDate, string couponCode, string customerId, string requestType);
    
        /// <summary>
        /// GetCouponRedemptionDataAction method.
        /// </summary>
        /// <param name="products">The products.</param>
        /// <param name="transactionId">The transactionId.</param>
        /// <param name="returnTransactionId">The returnTransactionId.</param>
        /// <param name="receiptId">The receiptId.</param>
        /// <param name="storeId">The storeId.</param>
        /// <param name="terminalId">The terminalId.</param>
        /// <param name="transactionDate">The transactionDate.</param>
        /// <param name="couponCode">The couponCode.</param>
        /// <param name="customerId">The customerId.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetCouponRedemptionDataAction(string products, string transactionId, string returnTransactionId, string receiptId, string storeId, string terminalId, string transactionDate, string couponCode, string customerId, string requestType);
    
        /// <summary>
        /// GetCouponsValidationReturnDataAction method.
        /// </summary>
        /// <param name="products">The products.</param>
        /// <param name="transactionId">The transactionId.</param>
        /// <param name="returnTransactionId">The returnTransactionId.</param>
        /// <param name="receiptId">The receiptId.</param>
        /// <param name="storeId">The storeId.</param>
        /// <param name="terminalId">The terminalId.</param>
        /// <param name="transactionDate">The transactionDate.</param>
        /// <param name="couponCode">The couponCode.</param>
        /// <param name="customerId">The customerId.</param>
        /// <param name="orderType">The orderType.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetCouponsValidationReturnDataAction(string products, string transactionId, string returnTransactionId, string receiptId, string storeId, string terminalId, string transactionDate, string couponCode, string customerId, string orderType, string requestType);
    
        /// <summary>
        /// GetCouponReturnDataAction method.
        /// </summary>
        /// <param name="products">The products.</param>
        /// <param name="transactionId">The transactionId.</param>
        /// <param name="returnTransactionId">The returnTransactionId.</param>
        /// <param name="receiptId">The receiptId.</param>
        /// <param name="storeId">The storeId.</param>
        /// <param name="terminalId">The terminalId.</param>
        /// <param name="transactionDate">The transactionDate.</param>
        /// <param name="couponCode">The couponCode.</param>
        /// <param name="customerId">The customerId.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetCouponReturnDataAction(string products, string transactionId, string returnTransactionId, string receiptId, string storeId, string terminalId, string transactionDate, string couponCode, string customerId, string requestType);
    
        /// <summary>
        /// GetItemData method.
        /// </summary>
        /// <param name="barcodeValue">The barcodeValue.</param>
        /// <param name="itemIdValue">The itemIdValue.</param>
        /// <param name="itemNameValue">The itemNameValue.</param>
        /// <param name="itemFormatValue">The itemFormatValue.</param>
        /// <param name="offersValue">The offersValue.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetItemData(string barcodeValue, string itemIdValue, string itemNameValue, string itemFormatValue, string offersValue, string requestType);
    
        /// <summary>
        /// GetRuningOffersListData method.
        /// </summary>
        /// <param name="barcodeValue">The barcodeValue.</param>
        /// <param name="itemIdValue">The itemIdValue.</param>
        /// <param name="itemNameValue">The itemNameValue.</param>
        /// <param name="itemFormatValue">The itemFormatValue.</param>
        /// <param name="offersValue">The offersValue.</param>
        /// <param name="requestType">The requestType.</param>
        /// <returns>string object.</returns>
        Task<string> GetRuningOffersListData(string barcodeValue, string itemIdValue, string itemNameValue, string itemFormatValue, string offersValue, string requestType);
    
        /// <summary>
        /// VoidPaymentOnVoidTransactionAsync method.
        /// </summary>
        /// <param name="cartId">The cartId.</param>
        /// <returns>Cart object.</returns>
        Task<Cart> VoidPaymentOnVoidTransactionAsync(string cartId);
    
    }
    
    /// <summary>
    /// Interface for GKCustomerEntity Manager.
    /// </summary>
    [GeneratedCodeAttribute("Confiz.Commerce.RetailProxy.Extension", "1.0")]
    public interface IGKCustomerEntityManager : IEntityManager
    {
        
        /// <summary>
        /// CreateUpdateCustomer method.
        /// </summary>
        /// <param name="lMSID">The lMSID.</param>
        /// <param name="mobileNumber">The mobileNumber.</param>
        /// <param name="searchName">The searchName.</param>
        /// <param name="email">The email.</param>
        /// <param name="legalEntity">The legalEntity.</param>
        /// <param name="firstName">The firstName.</param>
        /// <param name="lastName">The lastName.</param>
        /// <param name="gender">The gender.</param>
        /// <param name="dOB">The dOB.</param>
        /// <param name="profileCompleted">The profileCompleted.</param>
        /// <param name="nationality">The nationality.</param>
        /// <param name="residenceCountry">The residenceCountry.</param>
        /// <param name="residenceCity">The residenceCity.</param>
        /// <param name="memberTier">The memberTier.</param>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of GKCustomerEntity.</returns>
        Task<PagedResult<GKCustomerEntity>> CreateUpdateCustomer(string lMSID, string mobileNumber, string searchName, string email, string legalEntity, string firstName, string lastName, string gender, string dOB, string profileCompleted, string nationality, string residenceCountry, string residenceCity, string memberTier, QueryResultSettings queryResultSettings = null);
    
    }
    
    /// <summary>
    /// Interface for GKCouponCheckEntity Manager.
    /// </summary>
    [GeneratedCodeAttribute("Confiz.Commerce.RetailProxy.Extension", "1.0")]
    public interface IGKCouponCheckEntityManager : IEntityManager
    {
        
        /// <summary>
        /// ApplyGKCoupon method.
        /// </summary>
        /// <param name="couponBarCode">The couponBarCode.</param>
        /// <param name="memberId">The memberId.</param>
        /// <param name="cartID">The cartID.</param>
        /// <param name="cartVersion">The cartVersion.</param>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of GKCouponCheckEntity.</returns>
        Task<PagedResult<GKCouponCheckEntity>> ApplyGKCoupon(string couponBarCode, int memberId, string cartID, long cartVersion, QueryResultSettings queryResultSettings = null);
    
        /// <summary>
        /// VoidGKCoupon method.
        /// </summary>
        /// <param name="couponBarCode">The couponBarCode.</param>
        /// <param name="cartID">The cartID.</param>
        /// <param name="cartVersion">The cartVersion.</param>
        /// <returns>string object.</returns>
        Task<string> VoidGKCoupon(string couponBarCode, string cartID, long cartVersion);
    
        /// <summary>
        /// LMSIDSave method.
        /// </summary>
        /// <param name="lMSID">The lMSID.</param>
        /// <param name="aPoints">The aPoints.</param>
        /// <param name="rPoints">The rPoints.</param>
        /// <param name="receiptID">The receiptID.</param>
        /// <returns>string object.</returns>
        Task<string> LMSIDSave(string lMSID, string aPoints, string rPoints, string receiptID);
    
    }
    
    /// <summary>
    /// Interface for GKOfflineTransactionEntity Manager.
    /// </summary>
    [GeneratedCodeAttribute("Confiz.Commerce.RetailProxy.Extension", "1.0")]
    public interface IGKOfflineTransactionEntityManager : IEntityManager
    {
        
        /// <summary>
        /// GetOffLineTransactions method.
        /// </summary>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of GKOfflineTransactionEntity.</returns>
        Task<PagedResult<GKOfflineTransactionEntity>> GetOffLineTransactions(QueryResultSettings queryResultSettings = null);
    
    }
    
    /// <summary>
    /// Interface for GKMemberEntity Manager.
    /// </summary>
    [GeneratedCodeAttribute("Confiz.Commerce.RetailProxy.Extension", "1.0")]
    public interface IGKMemberEntityManager : IEntityManager
    {
        
        /// <summary>
        /// IfGKMemberExists method.
        /// </summary>
        /// <param name="customerIdBarCode">The customerIdBarCode.</param>
        /// <param name="transId">The transId.</param>
        /// <param name="staffId">The staffId.</param>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of GKMemberEntity.</returns>
        Task<PagedResult<GKMemberEntity>> IfGKMemberExists(string customerIdBarCode, string transId, string staffId, QueryResultSettings queryResultSettings = null);
    
    }
    
 }
